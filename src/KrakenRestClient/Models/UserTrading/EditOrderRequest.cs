namespace KrakenRestClient.Models.UserTrading;

public class EditOrderRequest
{
    /// <summary>
    /// integer (int32)
    /// userref is an optional user-specified integer id that can be associated with any number of orders.
    /// Many clients choose a userref corresponding to a unique integer id generated by their systems
    /// (e.g. a timestamp). However, because we don't enforce uniqueness on our side, it can also be used to easily
    /// group orders by pair, side, strategy, etc. This allows clients to more readily cancel or query information
    /// about orders in a particular group, with fewer API calls by using userref instead of our txid, where supported.
    /// </summary>
    public int? UserReferenceId { get; set; }

    /// <summary>
    /// Original Order ID or User Reference Id (userref) which is user-specified integer id used with the original
    /// order. If userref is not unique and was used with multiple order, edit request is denied with an error.
    /// </summary>
    public required string TransactionId { get; set; }

    /// <summary>
    /// Order quantity in terms of the base asset.
    /// </summary>
    public decimal? Volume { get; set; }

    /// <summary>
    /// Order quantity in terms of the base asset, used to create an iceberg order.
    /// </summary>
    public string? DisplayVolume { get; set; }

    /// <summary>
    /// Asset pair id or altname
    /// </summary>
    public required string Pair { get; set; }

    /// <summary>
    /// Limit price for limit orders
    /// Trigger price for stop-loss, stop-loss-limit, take-profit and take-profit-limit orders
    /// </summary>
    public decimal? Price { get; set; }

    /// <summary>
    /// Limit price for stop-loss-limit and take-profit-limit orders
    /// </summary>
    public decimal? SecondaryPrice { get; set; }

    /// <summary>
    /// Comma delimited list of order flags. Only these flags can be
    /// changed: - post post-only order (available when ordertype = limit). All the flags from the parent order are
    /// retained except post-only. post-only needs to be explicitly mentioned on edit request.
    /// </summary>
    public string? OrderFlags { get; set; }

    /// <summary>
    /// RFC3339 timestamp (e.g. 2021-04-01T00:18:45Z) after which the matching engine should reject the new order
    /// request, in presence of latency or order queueing. min now() + 2 seconds, max now() + 60 seconds.
    /// </summary>
    public string? DeadLine { get; set; }

    /// <summary>
    /// Used to interpret if client wants to receive pending replace, before the order is completely replaced
    /// </summary>
    public bool? CancelResponse { get; set; }

    /// <summary>
    /// Validate inputs only. Do not submit order.
    /// Default: false
    /// </summary>
    public bool Validate { get; set; } = false;
}